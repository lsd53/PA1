ADDIU $11, $0, 0x8888
ADDIU $12, $0, 0x8888
ADDIU $13, $0, 0x8888
ADDIU $14, $0, 0x8888
ADDIU $15, $0, 0x8888

ADDIU $16, $0, -1
ADDIU $17, $0, -1
ADDIU $18, $0, -1
ADDIU $19, $0, -1
ADDIU $20, $0, -1
ADDIU $21, $0, -1
ADDIU $22, $0, -1
ADDIU $23, $0, -1
ADDIU $24, $0, -1
ADDIU $25, $0, -1
ADDIU $26, $0, -1
ADDIU $27, $0, -1
ADDIU $28, $0, -1
ADDIU $29, $0, -1
ADDIU $30, $0, -1
ADDIU $31, $0, -1

ADDIU $1, $0, 1
ADDIU $2, $0, -1
LUI $3, 1
# While we're at it, test some hazards on LUI...
LUI $4, 0xdead
ORI $4, $4, 0xbeef
LUI $5, 0x1337
NOP
ORI $5, $5, 0xd00d

SLT $16, $1, $2 # 0x00000001 > 0xffffffff, so $16 = 0
SLTU $17, $2, $1  # 0xffffffff > 0x00000001, so $17 = 0
SLTI $18, $3, 0x7fff # 0x00010000 > 0x00007fff, so $18 = 0
SLTI $19, $3, 0x8000 # 0x00010000 > 0xffff8000, so $19 = 0
SLTI $20, $1, 0x8000 # 0x00000001 > 0xffff8000, so $20 = 0
SLTI $21, $2, 0x8000 # 0xffffffff > 0xffff8000, so $21 = 0
SLTIU $22, $3, 0x7fff # 0x00010000 > 0x00007fff, so $22 = 0
SLTIU $23, $2, 0x8000 # 0xffffffff > 0xffff8000, so $23 = 0
SLTIU $24, $2, 0x7fff # 0xffffffff > 0x00007fff, so $24 = 0

SLT $25, $2, $1 # 0xffffffff < 0x00000001, so $25 = 1
SLTU $26, $1, $2 # 0x00000001 < 0xffffffff, so $26 = 1
SLTI $27, $1, 0x7fff # 0x00000001 < 0x00007fff, so $27 = 1
SLTI $28, $2, 0x7fff # 0xffffffff < 0x00007fff, so $28 = 1
SLTIU $29, $3, 0x8000 # 0x00010000 < 0xffff8000, so $29 = 1
SLTIU $30, $1, 0x8000 # 0x00000001 < 0xffff8000, so $30 = 1
SLTIU $31, $1, 0x7fff # 0x00000001 < 0x00007fff, so $31 = 1

MOVZ $12, $4, $0 # $12 = deadbeef
MOVN $13, $4, $1 # $13 = deadbeef
MOVN $14, $4, $0 # $14 = ffff8888
MOVZ $15, $4, $1 # $15 = ffff8888

# Hazards on bad moves!
MOVZ $9, $1, $1
MOVZ $10, $1, $1
ADDU $11, $9, $10 # If 0, they pass. If 1, they fail one case. If 2, they fail both!
